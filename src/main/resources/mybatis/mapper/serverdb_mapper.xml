<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kevin.server_monitor.mapper.ServerDBMapper">

    <sql id="server_info_sensor_select">
        SELECT
            `system`,
            ip,
            server_name,
            tomcat_port,
            val_date,
            status,
            id,
            CONVERT(AES_DECRYPT(pw,SHA2(`key`,512)) USING UTF8) as pw,
            server_port,
            info_dir,
            tomcat_dir,
            trapic_tx,
            trapic_rx,
            cpu,
            memory,
            disk,
            end_date
        FROM
            monitoring_db.server_info_sensor
    </sql>

    <select id="detectServer" resultType="map">
        /* 서버 센서 검색 ServerDBMapper.detectServer */
        <include refid="server_info_sensor_select"/>
        <if test="ip != null">
        WHERE
            ip = #{ip}
        </if>
        <if test="server_name != null">
        AND
            server_name = #{server_name}
        </if>
        <if test="tomcat_port != null">
        AND
            tomcat_port = ${tomcat_port}
        </if>
        ORDER BY `system` DESC
    </select>

    <select id="detectServerList" resultType="map">
        /* 서버 센서 검색(리스트) ServerDBMapper.detectServerList */
        <include refid="server_info_sensor_select"/>
        <if test="ip != null">
        WHERE
            ip = #{ip}
        </if>
        <if test="server_name != null">
        AND
            server_name = #{server_name}
        </if>
        <if test="tomcat_port != null">
        AND
            tomcat_port = ${tomcat_port}
        </if>
        <if test="from_date != null and ip != null">
        AND
            val_date <![CDATA[>=]]> #{from_date}
        </if>
        <if test="from_date != null and ip == null">
        WHERE
            val_date <![CDATA[>=]]> #{from_date}
        </if>
        <if test="to_date != null">
        AND
            val_date <![CDATA[<=]]> #{to_date}
        </if>
        <if test="end_date != null">
        AND
            end_date <![CDATA[>=]]> #{from_date}
        </if>
        ORDER BY `system` DESC
    </select>

    <select id="detectServerRowList" resultType="map">
        /* 서버 Row 검색(리스트) ServerDBMapper.detectServerRowList */
        SELECT
            `system`,
            ip,
            server_name,
            tomcat_port,
            val_date,
            status,
            trapic_tx,
            trapic_rx,
            cpu,
            memory,
            disk
        FROM
            monitoring_db.server_info_raw
        <if test="ip != null">
        WHERE
            ip = #{ip}
        </if>
        <if test="server_name != null">
        AND
            server_name = #{server_name}
        </if>
        <if test="tomcat_port != null">
        AND
            tomcat_port = ${tomcat_port}
        </if>
        <if test="from_date != null">
        AND
            val_date <![CDATA[>=]]> #{from_date}
        </if>
        <if test="to_date != null">
        AND
            val_date <![CDATA[<=]]> #{to_date}
        </if>
        ORDER BY `system` DESC
    </select>

    <select id="detectServerLogList" parameterType="com.kevin.server_monitor.dto.ServerLogDto" resultType="com.kevin.server_monitor.dto.ServerLogDto" fetchSize="10000">
        /* 서버 Log 검색(리스트) ServerDBMapper.detectServerLogList */
        SELECT
        `system`,
        ip,
        server_name,
        val_date,
        log,
        reg_date
        FROM
            monitoring_db.server_info_log
        <if test="ip != null">
        WHERE
            ip = #{ip}
        </if>
        <if test="server_name != null">
        AND
            server_name = #{server_name}
        </if>
        <if test="from_date != null">
        AND
            val_date <![CDATA[>=]]> #{from_date}
        </if>
        <if test="to_date != null">
        AND
            val_date <![CDATA[<=]]> #{to_date}
        </if>
        ORDER BY log_idx DESC
        <if test="from_date != null and to_date == null">
        LIMIT 10
        </if>
        <if test="from_date != null and to_date != null">
        LIMIT #{searchDto.pagination.limitStart}, #{searchDto.recordSize}
        </if>
    </select>

    <select id="detectTrapicRowList" resultType="map">
        /* 서버 Trapic 검색(리스트) ServerDBMapper.detectServerRowList */
        SELECT
            `system`,
            ip,
            server_name,
            tomcat_port,
            DATE_FORMAT(val_date, '%H') AS val_date,
            FORMAT(AVG(trapic_tx), 2) AS trapic_tx,
            FORMAT(AVG(trapic_rx), 2) AS trapic_rx,
            cpu,
            memory,
            disk
        FROM
            monitoring_db.server_info_raw
        <if test="ip != null">
        WHERE
            ip = #{ip}
        </if>
        <if test="server_name != null">
        AND
            server_name = #{server_name}
        </if>
        <if test="tomcat_port != null">
        AND
            tomcat_port = ${tomcat_port}
        </if>
        <if test="from_date != null">
        AND
            val_date <![CDATA[>=]]> #{from_date}
        </if>
        <if test="to_date != null">
        AND
            val_date <![CDATA[<=]]> #{to_date}
        </if>
        GROUP BY DATE_FORMAT(val_date, '%H'), tomcat_port
        ORDER BY `system`, tomcat_port, val_date
    </select>

    <insert id="insertServerInfo"  parameterType="map">
        /* 서버 정보 추가 ServerDBMapper.insertServerInfo */
        INSERT monitoring_db.server_info_raw
            (`system`, ip, server_name, tomcat_port, val_date, status, trapic_tx, trapic_rx, cpu, memory, disk, reg_date)
        VALUES
            (#{system}, #{ip}, #{server_name}, ${tomcat_port}, #{val_date}, #{status}, #{trapic_tx}, #{trapic_rx}, #{cpu}, #{memory}, #{disk}, NOW())
    </insert>

    <update id="updateServerSensor" parameterType="map">
        /* 서버 정보 업데이트 ServerDBMapper.updateServerSensor */
        UPDATE
            monitoring_db.server_info_sensor
        <set>
            <if test="system != null">`system` = #{system},</if>
            <if test="val_date != null">val_date = #{val_date},</if>
            <if test="end_date != null">end_date = #{end_date},</if>
            <if test="status != null">status = #{status},</if>
            <if test="trapic_tx != null">trapic_tx = #{trapic_tx},</if>
            <if test="trapic_rx != null">trapic_rx = #{trapic_rx},</if>
            <if test="cpu != null">cpu = #{cpu},</if>
            <if test="memory != null">memory = #{memory},</if>
            <if test="disk != null">disk = #{disk},</if>
        </set>
        WHERE
            ip = #{ip}
          AND
            server_name = #{server_name}
        <if test="tomcat_port != null">
          AND
            tomcat_port = ${tomcat_port}
        </if>
    </update>

    <insert id="insertServerSensor" parameterType="map">
        /* 서버 센서 추가 ServerDBMapper.insertServerSensor */
        INSERT INTO monitoring_db.server_info_sensor
            (`system`, ip, server_name, tomcat_port, val_date, id, pw, `key`, server_port, info_dir, tomcat_dir, reg_date)
        VALUES
            (#{system}, #{ip}, #{server_name}, ${tomcat_port}, #{val_date}, #{id}, AES_ENCRYPT(#{pw},SHA2(#{key},512)), #{key}, ${server_port}, #{info_dir}, #{tomcat_dir}, NOW())
        ON DUPLICATE KEY UPDATE
                             `system` = #{system},
                             `server_name` = #{server_name},
                             `tomcat_port` = ${tomcat_port},
                             `val_date` = #{val_date},
                             `id` = #{id},
                             `pw` = AES_ENCRYPT(#{pw},SHA2(#{key},512)),
                             `key` = #{key},
                             server_port = ${server_port},
                             info_dir = #{info_dir},
                             tomcat_dir = #{tomcat_dir}
    </insert>

    <insert id="insertServerLog" parameterType="map">
        /* 서버 센서 추가 ServerDBMapper.insertServerLog */
        INSERT INTO monitoring_db.server_info_log
        (`system`, ip, server_name, val_date, log, reg_date)
        VALUES
            (#{system}, #{ip}, #{server_name}, #{val_date}, #{log}, NOW())
        ON DUPLICATE KEY UPDATE
                             `system` = #{system},
                             `server_name` = #{server_name},
                             `val_date` = #{val_date},
                             `log` = #{log}
    </insert>

    <delete id="deleteServerSensor" parameterType="map">
        /* 서버 정보 삭제 ServerDBMapper.deleteServerSensor */
        DELETE FROM monitoring_db.server_info_sensor WHERE server_name = #{server_name} AND ip = #{ip} AND tomcat_port = ${tomcat_port}
    </delete>
    
    <select id="logCount" parameterType="com.kevin.server_monitor.dto.ServerLogDto" resultType="int">
        SELECT
            COUNT(*)
        FROM
            monitoring_db.server_info_log
        <if test="ip != null">
            WHERE
            ip = #{ip}
        </if>
        <if test="server_name != null">
            AND
            server_name = #{server_name}
        </if>
        <if test="from_date != null">
            AND
            val_date <![CDATA[>=]]> #{from_date}
        </if>
        <if test="to_date != null">
            AND
            val_date <![CDATA[<=]]> #{to_date}
        </if>
        ORDER BY val_date DESC
        <if test="from_date != null and to_date == null">
            LIMIT 10
        </if>
    </select>

    <delete id="deleteServerLog">
        TRUNCATE monitoring_db.server_info_log
    </delete>

    <delete id="deleteServerRaw">
        TRUNCATE monitoring_db.server_info_raw
    </delete>
</mapper>