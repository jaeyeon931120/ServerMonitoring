<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kevin.server_monitor.security.mapper.UserMapper">

    <select id="getUserList" resultType="com.kevin.server_monitor.security.vo.UserVo">
        /* User 테이블 가져오기 UserMapper.getUserList */
        SELECT *
        FROM monitoring_db.monitoring_admin
        ORDER BY REG_DATE
    </select>

    <insert id="insertUser">
        /* 회원가입 UserMapper.insertUser */
        INSERT INTO monitoring_db.monitoring_admin (ID, PASSWORD, USERNAME, TEL, AUTHOR, MEMO, SALT)
        VALUES (#{id}, #{password}, #{username}, #{tel}, #{author}, #{memo}, #{salt})
    </insert>

    <select id="getUserById" resultType="com.kevin.server_monitor.security.vo.UserVo">
        /* 회원 정보 가져오기 UserMapper.getUserById */
        SELECT *
        FROM monitoring_db.monitoring_admin
        WHERE ID = #{id}
    </select>

    <update id="updateUser" parameterType="com.kevin.server_monitor.security.vo.UserVo">
        /* 회원정보 수정 UserMapper.updateUser */
        UPDATE monitoring_db.monitoring_admin
        SET USERNAME = #{username},
        TEL = #{tel},
        AUTHOR = #{author}
        <if test="password != null">
            ,PASSWORD = #{password}
            ,SALT = #{salt}
        </if>
        WHERE ID = #{id}
    </update>

    <delete id="deleteUser" parameterType="string">
        /* 탈퇴 UserMapper.deleteUser */
        DELETE
        FROM monitoring_db.monitoring_admin
        WHERE ID = #{id}
    </delete>

    <select id="getIDCheck" resultType="int" parameterType="string">
        /* ID중복체크 UserMapper.getIDCheck */
        SELECT COUNT(*)
        FROM (SELECT ID
              FROM monitoring_db.monitoring_admin
              WHERE ID = #{id}) as `A`
    </select>

    <select id="getUserDetails" resultType="com.kevin.server_monitor.security.vo.CustomUserDetails">
        /* 계정존재여부확인 UserMapper.getUserDetails */
        SELECT id,
               password
        FROM monitoring_db.monitoring_admin
        WHERE id = #{id}
    </select>

    <update id="failCntUpdate" parameterType="string">
        /* 계정실패횟수업데이트 UserMapper.failCntUpdate */
        UPDATE monitoring_db.monitoring_admin
        SET failcnt = IFNULL(failcnt, 0) + 1
        WHERE ID = #{id}
    </update>

    <select id="getFailCnt" resultType="map">
        /* 실패횟수조회 UserMapper.getFailCnt */
        SELECT IFNULL(failcnt, 0) AS failcnt, IFNULL(isenabled, 1) AS isenabled
        FROM monitoring_db.monitoring_admin
        WHERE id = #{id}
    </select>

    <update id="changeEnabled" parameterType="string">
        /* 계정잠김 UserMapper.changeEnabled */
        UPDATE monitoring_db.monitoring_admin
        SET isenabled = IF(isenabled = 0, 1, 0),
            failcnt = IF(isenabled = 0, 0, failcnt)
            WHERE ID = #{id}
    </update>
</mapper>